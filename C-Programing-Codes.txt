                                           ...........................DEEPAK RAJPUT....................................
(1)................HELLO WORLD TYPE..................................
#include <stdio.h>

int main()
{
    printf("Hello World");

    retur o;

}


(1)...............................write a program toperform input/output of all basic data type.............................................
#include <stdio.h>
#include <math.h>
int main()

{   int a;
    printf("Enter int numbere:");
    scanf("%d",&a);
    printf("%d\n",a);
    
    float b;
    printf("enter float number:");
    scanf("%f",&b);
    printf("%f\n",b);
    
    char c;
    printf("Enter character:");
    scanf("%s",&c);
    printf("%c\n",c);
    
    return 0;
}


(2)....................write a program to enter two number and find their sum.............................................................. 
#include <stdio.h>

int main()
{   int a, b;
    printf("enter a number a\n");
    scanf("%d",&a);
    printf("enter a number b\n");
    scanf("%d",&b);
    printf("the sum is %d\n",a+b);

    return 0;
}

(3)...................................write a c program enter two number and perform all arithmetic operations.............................
#include<stdio.h>
void main()

{   int a,b;
    printf("enter first number:\n");
    scanf("%d",&a);
    printf("enter second number:\n");
    scanf("%d",&b);
    printf("sum:%d",a+b);
    printf("diff:%d",a-b);
    printf("product:%d",a*b);
    printf("divide:%d",a/b);


}

(4)........................write a c program to enter length and breadth of a reactangle and find its perimeter............................
#include<stdio.h>
#include<math.h>

void main()

{   int a,b;
    printf("enter length:\n");
    scanf("%d",&a);
    printf("enter breadth:\n");
    scanf("%d",&b);
    printf("perimeter of rectangle%d",2*(a+b));


}


(5).............................write a c program to enter length and breadth of a rectangle and find its area.............................
#include<stdio.h>
#include<math.h>

int main()

{   int a,b;
    printf("enter length:\n");
    scanf("%d",&a);
    printf("enter breadth:\n");
    scanf("%d",&b);
    printf("area of rectangle%d",a*b);

    return 0;

}

(6)................................write a c program to enter redius of a  circle and find its diameter circumference and area.............
#include<stdio.h>
#include<math.h>

int main()

{   float r;
    printf("enter radius:\n");
    scanf("%f",&r);
    printf("diameter of circle:%g",2*r);
    printf("cicumference of circle:%g",2*22/7.0*r);
    printf("area of circle:%g",22/7.0*r*r);

    return 0;

}

(7)..........................write a c program to enter length in cm and convert it into m and km..........................................
#include<stdio.h>
#include<math.h>

int main()

{   int length;
    printf("enter length in cm:\n");
    scanf("%d",&length);
    printf("enter length in m:%d\n",length/100);
    printf("enter length in km:%d\n",length/100000);
    

    return 0;

}

(8)...........................write a c program to enter temperature in celcious and convert it into fahrenheit............................
#include<stdio.h>
#include<math.h>

int main()

{   float a;
    printf("enter temperature in celcius:\n");
    scanf("%f",&a);
    printf("convert temprature in  fahrenheit:%f",9/5.0*(a+32));
    
    return 0;

}


(9)............................write a c progmam to enter temprature in fahrenheitannd convert into celcius................................
#include<stdio.h>
#include<math.h>

int main()

{   float a;
    printf("enter temperature in fahrenheit:\n");
    scanf("%f",&a);
    printf("convert temprature in  celcius:%f",5/9.0*(a-32));
    
    return 0;

}

(10).............................write a c program to convert days into years weeks and days..............................................
#include<stdio.h>
#include<math.h>

int main()

{   int days;
    printf("enter number of days:\n");
    scanf("%d",&days);
    printf("days in years:%d",days/365);
    printf("days in weeks:%d",(days%365)/7);
    printf("days in days:%d",days%365%7);
    
    
    return 0;

}

(11)................................write a c program to find power of any number X^Y......................................................
#include<stdio.h>
#include<math.h>

int main()

{   int x,y;
    printf("enter x:\n");
    scanf("%d",&x);
    printf("enter y:\n");
    scanf("%d",&y);
    printf("x to the power y:%g",pow(x,y));
    
    
    return 0;

}


(12).......................write a program to squre root of any number.....................................................................
#include<stdio.h>
#include<math.h>

int main()

{   float x;
    printf("enter x:\n");
    scanf("%f",&x);
    printf("square root of x:%f",sqrt(x));
    
    
    return 0;

}

(13)..........................write a c program to enter two angle of a triangle and find the third angle..................................
#include<stdio.h>
#include<math.h>

int main()

{   int x,y;
    printf("enter first angle:\n");
    scanf("%d",&x);
    printf("entr second angle:\n");
    scanf("%d",&y);
    int c=x+y;
    printf("enter third angle:%d",180-c);
    
    
    return 0;

}

(14).......................write a c program to enter base and height of a triangle find its area.........................................
#include<stdio.h>
#include<math.h>

int main()

{   int b,h;
    printf("enter base of triangle:\n");
    scanf("%d",&b);
    printf("entr height of triangle:\n");
    scanf("%d",&h);
    printf("area of triangle:%g",0.5*b*h);
    
    return 0;

}

(15)...........................write a c program to calculate area of an equileteral triangle.............................................
#include<stdio.h>
#include<math.h>

int main()

{   int a;
    printf("enter side of triangle:\n");
    scanf("%d",&a);
    printf("area of e quilateral triangle:%g",sqrt(3)/4*a*a);
    
    return 0;

}


(16)..........................write a c program to enter marks of five student and calculate total,average and percentage..................
#include<stdio.h>
#include<math.h>

int main()

{   float a,b,c,d,e;
    printf("enter marks of first student:\n");
    scanf("%f",&a);
    printf("enter marks of second student:\n");
    scanf("%f",&b);
    printf("enter marks of third student:\n");
    scanf("%f",&c);
    printf("enter marks of forth student:\n");
    scanf("%f",&d);
    printf("enter marks of fifth student:\n");
    scanf("%f",&e);
    printf("total marks of all five student:%g\n",(a+b+c+d+e));
    printf("average marks of all five student:%g\n",(a+b+c+d+e)/5);
    printf("percentage marks of all five student:%g",(a+b+c+d+e)*0.01);
    
    
    return 0;

}


(17)...........................write a c program to enter p,t,r and calculate simple interest.............................................. 
#include<stdio.h>
#include<math.h>

int main()

{   int p,t,r;
    printf("enter prncipal amount:\n");
    scanf("%d",&p);
    printf("enter time in years:\n");
    scanf("%d",&t);
    printf("enter rate:\n");
    scanf("%d",&r);
    printf("simple interest:%d",p*t*r/100);
    
    
    return 0;

}


(18).............................write a c program to enter p,t,r and calculate compound interest..........................................
#include<stdio.h>
#include<math.h>

int main()

{   int p,t,r;
    printf("enter prncipal amount:\n");
    scanf("%d",&p);
    printf("enter time in years:\n");
    scanf("%d",&t);
    printf("enter rate:\n");
    scanf("%d",&r);
    float k;
    k=(1+r/100.0);
    printf("compound interest:%g",p*pow(k,t));
    
    
    return 0;
###########################################################################################################################################

19. write a program to solve simple computational problems using arithmetic expressions and the use of each operator leading to the 
    simulation of a commercial calculator. (No built-in math function)?

#include<stdio.h>
int main()
{
    int a,b,choice;
    int result;
    printf("Enter two values\n");
    scanf("%d%d",&a,&b);
    printf("enter your choice\n");
    printf("1.Addition\n 2.Subtraction\n 3.Multiplication\n 4.Division\n 5.Modulus\n");
    scanf("%d",&choice);
    switch(choice)
    {
        case 1: result = a + b;
        break;
        case 2: result = a - b;
        break;
        case 3: result = a * b;
        break;
        case 4: result = a / b;
        break;
        case 5: result = a % b;
        break;
        default:printf("invalid choice");
    }
    printf("The Result = %d",result);
    return 0;
}

20. Write a program to compute the roots of a quadratic equation by accepting the coefficients. Print appropriate messages?

#include <stdio.h>
#include <math.h>
int main()
{
    float a, b, c, d, r1, r2;
    printf("Enter non-zero coefficients: ");
    scanf("%f %f %f", &a, &b, &c);
    d = (b * b) - 4 * a * c;
    if (d == 0)
    {
        r1 = r2 = (-b) / (2 * a);
        printf("Root are equal\n");
        printf("Root1 = %f\n and Root2 = %f\n", r1, r2);
    }
    else if (d > 0)
    {
        r1 = (-b + sqrt(d)) / (2 * a);
        r2 = (-b - sqrt(d)) / (2 * a);
        printf("Roots are real and distinct\n");
        printf("Root1 = %f\n", r1);
        printf("Root2 = %f\n", r2);
    }
    else
    {
        r1 = (-b) / (2 * a);
        r2 = sqrt(fabs(d)) / (2 * a);
        printf("Roots are complex\n");
        printf("Root1 = %f+i%f \n", r1, r2);
        printf("Root2 = %f-i%f \n", r1, r2);
    }
}


21. Write a program to find the reverse of a positive integer and check for palindrome or not Display appropriate messages?

#include <stdio.h>
int main()
{
    int rev, digit, n, m;
    printf("Enter four digit number :");
    scanf("%d", &n);
    m = n;
 
    while (n != 0)
    {
        digit = n % 10;
        n = n / 10;
        rev = rev * 10 + digit;
    }
    printf("Reverse number is %d \n", rev);
    if (m == rev)
        printf("Number is a palindrome");
    else
        printf("Not a palindrome");
}


22. Introduce 1D Array manipulation and implement Binary search

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
int main()
{
    int n, i, low, mid, high;
    char a[20][20], key[20];
    printf("Enter the number of names\n");
    scanf("%d", &n);
    printf("Enter the names\n");
    for (i = 0; i < n; i++)
    {
        scanf("%s", a[i]);
    }
    printf("Enter the key\n");
    scanf("%s", key);
    low = 0;
    high = n - 1;
    while (low <= high)
    {
        mid = (high + low) / 2;
        if (strcmp(a[mid], key) == 0)
        {
            printf("Name found at %d\n", mid + 1);
            exit(0);
        }
        else if (strcmp(a[mid], key) > 0)
            high = mid - 1;
        else
            low = mid + 1;
    }
    printf("Unsuccessful search \n");
}

23. Implement using functions to check whether the given number is prime and display appropriate messages(No built-in math function)

#include <stdio.h>
#include <stdlib.h>
int Isprime(int n);
int main()
{
    int n;
    printf("Enter a positive integer\n");
    scanf("%d", &n);
    if (Isprime(n))
        printf("%d is a prime number\n", n);
    else
        printf("%d is not a prime number\n", n);
    return 0;
}
int Isprime(int n)
{
    int i;
    if (n == 1)
    {
        printf("its a unique number\n");
        exit(0);
    }
    for (i = 2; i <= n / 2; i++)
    {
        if (n % i == 0)
        {
            return (0);
        }
    }
    return 1;
}

24. Write a program to introduce 2D Array manipulation and implement Matrix multiplication and ensure the rules of multiplication are checked

#include <stdio.h>
#include <stdlib.h>
int main()
{
    int m, n, p, q, i, j, k, a[10][10], b[10][10], c[10][10];
    printf("Enter the size of first matrix a\n");
    scanf("%d%d", &m, &n);
    printf("Enter the size of second matrix b\n");
    scanf("%d%d", &p, &q);
    if (n != p)
    {
        printf("Matix multiplication not possible\n");
        exit(0);
    }
    printf("Enter the first matix elements a\n");
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < n; j++)
        {
            scanf("%d", &a[i][j]);
        }
    }
    printf("The Matrix a is \n");
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < n; j++)
        {
            printf("%d\t", a[i][j]);
        }
        printf("\n");
    }
    printf("Enter the second matix elements b\n");
    for (i = 0; i < p; i++)
    {
        for (j = 0; j < q; j++)
        {
            scanf("%d", &b[i][j]);
        }
    }
    printf("The Matrix b is \n");
    for (i = 0; i < p; i++)
    {
        for (j = 0; j < q; j++)
        {
            printf("%d\t", b[i][j]);
        }
        printf("\n");
    }
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < q; j++)
        {
            c[i][j] = 0;
            for (k = 0; k < n; k++)
            {
                c[i][j] = c[i][j] + (a[i][k] * b[k][j]);
            }
        }
    }
    printf("Resultant matrix c\n");
    for (i = 0; i < m; i++)
    {
        for (j = 0; j < q; j++)
        {
            printf("%d\t", c[i][j]);
        }
        printf("\n");
    }
}

25. Write a program to compute Sin(x) using Taylor series approximation. Compare your result with the built-in Library function. Print both the result with appropriate messages

#include <stdio.h>
#include <math.h>
#define PI 3.142
int main()
{
    int n, i;
    float deg, x, sum = 0, term = 0;
    printf("Enter number of terms, say n\n");
    scanf("%d", &n);
    printf("Enter the degree\n");
    scanf("%f", &deg);
    x = (deg * PI) / 180;
    printf("In Radians = %f \n", x);
    term = x;
    sum = term;
    for (i = 3; i <= n; i += 2)
    {
        term = (-term * x * x) / (i * (i - 1));
        sum = sum + term;
    }
    printf("sin(%f)=%f\n", deg, sum);
    printf("Inbuilt function Sin(%f) = %f \n", deg, sin(x));
    printf("User function Sin(%f) = %f", deg, sum);
}
26. Write a program to sort the given set of N numbers using Bubble sort

#include <stdio.h>
int main()
{
    int a[20], n, i, temp = 0, j;
    printf("Enter number of array elements\n");
    scanf("%d", &n);
    printf("Enter array elements\n");
    for (i = 0; i < n; i++)
        scanf("%d", &a[i]);
    for (i = 1; i < n; i++)
    {
        for (j = 0; j < n - i; j++)
        {
            if (a[j] > a[j + 1])
            {
                temp = a[j];
                a[j] = a[j + 1];
                a[j + 1] = temp;
            }
        }
    }
    printf("The sorted array is \n");
    for (i = 0; i < n; i++)
        printf("%d\n", a[i]);
}

27. Write a program to find the square root of a given number N and execute for all possible Inputs with appropriate messages. Note: Don’t use library function sqrt(n)

#include <stdio.h>
int main()
{
    float sqrt, temp, n;
    printf("Enter a number\n");
    scanf("%f", &n);
    sqrt = n / 2;
    temp = 0;
    while (temp != sqrt)
    {
        temp = sqrt;
        sqrt = (n / sqrt + sqrt) / 2;
    }
    printf("The square root of the number is %f", sqrt);
}

28. Implement structures to read, write, and compute average marks and the students scoring above and below the average marks for a class of N students

#include <stdio.h>
#include <stdlib.h>
typedef struct
{
    char name[20];
    int usn;
    int marks;
} stud;
int main()
{
    int i, n;
    float avg = 0;
    stud st[50];
    printf("Enter the number of students\n");
    scanf("%d", &n);
    printf("enter the student details\n");
    for (i = 0; i < n; i++)
    {
        printf("\n name:");
        scanf("%s", st[i].name);
        printf("\n usn:");
        scanf("%d", &st[i].usn);
        printf("\n marks:");
        scanf("%d", &st[i].marks);
        avg = avg + st[i].marks;
    }
    avg = avg / n;
    for (i = 0; i < n; i++)
    {
        printf("\n name \t %s", st[i].name);
        printf("\n usn \t %d", st[i].usn);
        printf("\n marks\t:%d\n", st[i].marks);
        if (st[i].marks < avg)
            printf("the student is below the average\n");
        else
            printf("the student is above average\n");
    }
}

29. Write a program using pointers to compute the sum and standard deviation of all elements stored in an array of n real numbers.

#include <stdio.h>
#include <math.h>
int main()
{
    float a[10], *ptr, mean, sum = 0, var, sumstd = 0, std;
    int n, i;
    printf("Enter the number of elements\n");
    scanf("%d", &n);
    printf("Enter the array elements\n");
    for (i = 0; i < n; i++)
    {
        scanf("%f", &a[i]);
    }
    ptr = a;
    for (i = 0; i < n; i++)
    {
        sum = sum + (*ptr);
        ptr++;
    }
    mean = sum / n;
    ptr = a;
    for (i = 0; i < n; i++)
    {
        sumstd = sumstd + pow((*ptr - mean), 2);
        ptr++;
    }
    var = sumstd / n;
    std = sqrt(var);
    printf("Sum = %f \n", sum);
    printf("Mean = %f \n", mean);
    printf("Variance = %f \n", var);
    printf("Standard Deviation = %f", std);
}

30. Implement Recursive functions for binary to Decimal Conversion

#include <stdio.h>
int binarytodecimal(int binarynum)
{
    if (!(binarynum / 10))
        return binarynum;
    return (binarynum % 10 + binarytodecimal(binarynum / 10) * 2);
}
int main()
{
    int binarynum;
    printf("Enter the binary number \n");
    scanf("%d", &binarynum);
    printf("equivalant decimal number is %d", binarytodecimal(binarynum));
    return 0;
}

31. Write a function to implement string operations such as compare, concatenate, string length. Convince the parameters passing techniques

#include <stdio.h>
#include <string.h>
int main()
{
    int length(char str[100]);
    int compare(char s1[100], char s2[100]);
    void concat(char s1[100], char s2[100]);
 
 
        int option, result;
        char str[100], s1[100], s2[100];
        do
        {
            printf("1.String length \n");
            printf("2.string comparision \n");
            printf("3.string concatenation \n");
            printf("4.quit \n");
            printf("enter your choice \n");
            scanf("%d", &option);
            switch (option)
            {
            case 1:
                printf("enter string \n");
                scanf("%s", &str);
                result = length(str);
                printf("the length of string= %d\n", result);
                break;
            case 2:
                printf("enter 1st string\n");
                scanf("%s", &s1);
                printf("enter 2nd string\n");
                scanf("%s", &s2);
                result = compare(s1, s2);
                if (result == 0)
                {
                    printf("strings are equal \n");
                }
                else
                {
                    printf("strings are not equal \n");
                    break;
                }
 
            case 3:
                printf("enter two strings\n");
                scanf("%s%s", s1, s2);
                concat(s1, s2);
                printf("result=%s \n", s1);
                break;
            }
        } while (option <= 3);
        return 0;
}
    int length(char str[100])
    {
        int i = 0;
        while (str[i] != '\0')
            i++;
        return (i);
    }
    int compare(char s1[100], char s2[100])
    {
        int i = 0;
        while (s1[i] != '\0')
        {
            if (s1[i] > s2[i])
                return (1);
            else if (s1[i] < s2[i])
                return (-1);
            i++;
        }
        return 0;
    }
    void concat(char s1[100], char s2[100])
    {
        int i, j;
        i = 0;
        while (s1[i] != '\0')
            i++;
        for (j = 0; s2[j] != '\0'; i++, j++)
            s1[i] = s2[j];
        s1[i] = '\0';
    }

32.  Write a program to sum of even numbers
#include<stdio.h>
int main() {
    int n;
    printf ("Enter the limit : ");
    scanf("%d",&n);
    int a[n];
    int i;
    int sum =0;
    for(i=0; i<n; i++){
        scanf("%d",&a[i]);
        if(i%2==0){
            sum = sum +a[i];
        }
    }
    printf ("sum of even indexing : %d",sum);
}

33.  swap numbers

#include<stdio.h>
//swap number
int main() {
    int a,b;
    scanf("%d %d",&a,&b);
    a=a^b;
    b=b^a;
    a=a^b;
    printf ("%d \n%d",a,b);
}

34.   sum of digits

#include<stdio.h>
int main() {
    int n;
    scanf ("%d",&n);
    int c; int s=0;
    while (n>0){
        c=n%10;
        s=s+c;
        n=n/10;
    }
    printf ("%d",s);
    return 0;
}

35.  set unset bits

#include<stdio.h>
int main() {
    int n;
    scanf("%d",&n);
    int c= n&1;
    if (c==1){
        printf ("%d is set[1]",n);
    }
    else{
        printf ("%d is unset[0]",n);
    }
} 

36.  ropts using switch opreters
#include<stdio.h>
#include<math.h>
int main() {
    int a,b,c,r1,r2;
    printf ("enter the cofficient of x^2, x, constant : ");
    scanf ("%d %d %d",&a,&b,&c);
    int d = b*b - 4*a*c;
    switch (d>0){
        case 1:
        r1 = (-b + sqrt(d))/2*a;
        r2 = (-b - sqrt(d))/2*a;  
        printf("%d %d ",r1,r2); 
        break; 

        case 0:
         switch (d<0){
            case 1:
            printf ("roots are imaginary");
            break;

            case 0:
            r1 = -b/2*a;
            r2=r1;
            printf ("%d %d",r1,r2);
            break;
        }
    }
}

37.  reverse pallindrome
#include<stdio.h>
//reverse and pallindrome   121
int main() {
    int n;
    scanf ("%d",&n);
    int c=n;
    int a,b=0;
    while (n>0){
        a=n%10;
        b=b*10+a;
        n=n/10;
    }
    printf ("reverse of a %d is %d\n",c,b);

    if (c == b){
        printf ("Given number is a pallindrome.");
    }
    else{
        printf ("Given number is not a pallindrome.");
    }
}

38.  cartesian plane
#include <stdio.h>
int main() {
    int x,y;
    scanf ("%d %d",&x,&y);
    if (x>0 && y>0){
        printf ("value in first quadrant");
    }
    else if (x<0 && y>0){
        printf ("value in second quadrant");
    }
    else if (x<0 && y<0){
        printf ("value in third quadrant");
    }
    else if(x>0 && y<0) {
        printf ("value in fourth quadrant");
    }
    else if (x==0){
        printf ("value at X-axis");
    }
    else {
        printf ("value at Y-axis");
    }

    return 0;
}

39.  reverse array
#include<stdio.h>
int main() {
    int n; 
    scanf("%d",&n);
    int a[n];
    int b[n];
    int i;
    for(i=0; i<n; i++){
        scanf("%d",&a[i]);
    }
    printf ("before reverse array : ");
    for (i=0; i<n; i++){
        printf ("%d ",a[i]);
    }
    printf ("\nafter reverse array : ");
    for (i=n-1; i>=0; i--){
        printf ("%d ",a[i]);
    }
}

40. aramstrong number
#include<stdio.h>
#include<math.h>
// Armstrong   153
int main() {
    int n ;
    scanf ("%d",&n);
    int c=n;
    int num=n;
    int a,b=0; int s=0;

    while (n>0){
        b++;
        n=n/10;
    }
    
    while (c>0){
        a=c%10;
        double d=pow(a,b);
        s=s+d;
        c=c/10;
    }
    if (s==num){
        printf ("Given number is a armstrong.");
    }
    else {
        printf ("Given number is not a armstrong.");
    }
